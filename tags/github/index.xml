<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GitHub on Dave's DevOps blog</title><link>https://davehart.co.uk/tags/github/</link><description>Recent content in GitHub on Dave's DevOps blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 15 Jan 2021 16:04:10 +0000</lastBuildDate><atom:link href="https://davehart.co.uk/tags/github/index.xml" rel="self" type="application/rss+xml"/><item><title>Automation: Apache and Route 53</title><link>https://davehart.co.uk/post/automation-apache-and-route-53/</link><pubDate>Fri, 15 Jan 2021 16:04:10 +0000</pubDate><guid>https://davehart.co.uk/post/automation-apache-and-route-53/</guid><description>This solution consisted of a Route53 hosted zone with A-records directing traffic to an AWS EIP (Elastic IP Address) hosted on a firewall appliance (Fortinet). The firewall had a VIP rule to forward requests received on that EIP to the Apache reverse proxy.
A regular activity I had to perform for one of my clients was setting up apache reverse proxy services for their development environments. This involved defining a subdomain name for an application, creating an A-record on AWS Route53 and then configuring the rewrite rules which varied per application type.</description></item><item><title>Encrypting EBS volumes programmatically with python</title><link>https://davehart.co.uk/post/encrypting-ebs-volumes-programmatically-python/</link><pubDate>Mon, 26 Oct 2020 18:42:52 +0000</pubDate><guid>https://davehart.co.uk/post/encrypting-ebs-volumes-programmatically-python/</guid><description>Encrypting attached AWS EBS volume involves a number of steps. This article will show you how to encrypt your volumes using python.
Let&amp;rsquo;s set the scene, you have an environment hosting a number of AWS EC2 instances and now security have said, &amp;ldquo;Hey, these EBS volumes should be encrypted!&amp;rdquo; No argument from me. So how do we go about this programmatically.
You can enable default volume encryption in the management console. Check this link out on how to do it.</description></item><item><title>Terminate EC2 instance by tag using Python</title><link>https://davehart.co.uk/post/terminate-ec2-instance-by-tag-using-python/</link><pubDate>Fri, 25 Sep 2020 17:35:22 +0000</pubDate><guid>https://davehart.co.uk/post/terminate-ec2-instance-by-tag-using-python/</guid><description>I originally developed this script in bash for a GoCD pipeline. The intention of the script is to decommission instances in batch whilst generating a final snapshot. For those of you that wonder why is Terraform not being used? (You know who you are) Good question. Not everyone is using Terraform yet and refactoring/importing deployment methods will incur costs which some clients are not prepared to pay.
Why change it? The move to Python was a logical one for me, it removes any OS dependency and I also see this as good excuse to practice my Python.</description></item></channel></rss>