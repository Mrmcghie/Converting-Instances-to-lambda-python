<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>modules on Dave's DevOps blog</title><link>https://davehart.co.uk/tags/modules/</link><description>Recent content in modules on Dave's DevOps blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 09 Apr 2021 11:23:40 +0000</lastBuildDate><atom:link href="https://davehart.co.uk/tags/modules/index.xml" rel="self" type="application/rss+xml"/><item><title>Terraform: Multi-cloud demo – Part 3 – AWS Infrastructure</title><link>https://davehart.co.uk/post/terraform-multi-cloud-demo-part-3-aws-infrastructure/</link><pubDate>Fri, 09 Apr 2021 11:23:40 +0000</pubDate><guid>https://davehart.co.uk/post/terraform-multi-cloud-demo-part-3-aws-infrastructure/</guid><description>It&amp;rsquo;s going well so far. We have our source control defined and updated and our Terraform remote state hosted on Azure Storage which we provisioned using Terraform. Let&amp;rsquo;s now move onto provisioning our AWS infrastructure.
Root module main.tf First off we need to add the aws provider;
1 2 3 4 provider &amp;#34;aws&amp;#34; { region = var.region profile = var.profile } You will notice that we have also used a couple of variables with this provider.</description></item></channel></rss>