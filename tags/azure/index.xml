<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>azure on Dave's DevOps blog</title><link>https://davehart.co.uk/tags/azure/</link><description>Recent content in azure on Dave's DevOps blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 03 Apr 2021 08:57:31 +0000</lastBuildDate><atom:link href="https://davehart.co.uk/tags/azure/index.xml" rel="self" type="application/rss+xml"/><item><title>Terraform: Multi-cloud demo – Part 2 – Terraform Remote State on Azure</title><link>https://davehart.co.uk/post/terraform-multi-cloud-demo-part-2-terraform-remote-state-on-azure/</link><pubDate>Sat, 03 Apr 2021 08:57:31 +0000</pubDate><guid>https://davehart.co.uk/post/terraform-multi-cloud-demo-part-2-terraform-remote-state-on-azure/</guid><description>So we have setup our source control (GitHub) for team collaboration (Part 1) , next we should consider the Terraform state file.
By Default Terraform will create a local state file (terraform.tfstate), this does not work when collaborating as each person needs to have the latest version of the state data prior to performing any Terraform actions. In addition you need to ensure that nobody else is running Terraform at the same time. Having a remote state helps mitigate these issues.</description></item></channel></rss>